
/* General Body and Layout Styles */
body {
font-family: Arial, sans-serif;
background-color: #f4f4f9;
color: #333;
padding: 20px;
line-height: 1.6;
display: flex;
flex-direction: column;
align-items: center;
text-align: center;
}

.assignment-section {
background-color: #fff;
padding: 40px 20px;
margin: 20px 0;
border-radius: 12px;
box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
max-width: 800px;
width: 100%;
}

h1, h2 {
color: #4a4e69;
}

/* * Part 1: CSS3 Transitions and Animations: demonstrates effects that are triggered purely by CSS.
*/

.animated-button {
padding: 12px 24px;
background-color: #9a8c98;
color: white;
border: none;
border-radius: 8px;
cursor: pointer;
font-size: 16px;
margin-top: 15px;
transition: background-color 0.3s ease, transform 0.3s ease;
}

/* This is the state the element transitions to on hover */
.animated-button:hover {
background-color: #f2e9e4;
color: #4a4e69;
transform: scale(1.05);
}

/* CSS Keyframe Animation: Continuous Pulse*/
@keyframes pulse {
0% {
box-shadow: 0 0 0 0 rgba(154, 140, 152, 0.4);
}
70% {
box-shadow: 0 0 0 20px rgba(154, 140, 152, 0);
}
100% {
box-shadow: 0 0 0 0 rgba(154, 140, 152, 0);
}
}

/* Applying the keyframe animation to the button */
.animated-button {
animation: pulse 2s infinite; 
}

/* Part 3: Combining CSS Animations with JavaScript: styles the elements that will be manipulated by JavaScript.
*/
.box-to-animate {
width: 800px;
height: 100px;
background-color: #c9ada7;
border-radius: 12px;
margin-top: 20px;
transform: translateX(-200%);
opacity: 0;
transition: transform 0.8s ease-out, opacity 0.8s ease-out;
}

/*
When this class is added to the box, the transition will be triggered.
*/
.box-to-animate.is-active {
transform: translateX(0);
opacity: 1;
}